import _extends from"@babel/runtime/helpers/esm/extends";import _slicedToArray from"@babel/runtime/helpers/esm/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import useControlled from"../utils/useControlled";import useFormControl from"../FormControl/useFormControl";import withStyles from"../styles/withStyles";import IconButton from"../IconButton";var styles={root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}},SwitchBase=React.forwardRef(function(e,o){var r=e.autoFocus,t=e.checked,s=e.checkedIcon,n=e.classes,p=e.className,i=e.defaultChecked,a=e.disabled,c=e.icon,l=e.id,d=e.inputProps,u=e.inputRef,m=e.name,y=e.onBlur,h=e.onChange,f=e.onFocus,b=e.readOnly,P=e.required,T=e.tabIndex,k=e.type,x=e.value,B=_objectWithoutProperties(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),C=useControlled({controlled:t,default:Boolean(i),name:"SwitchBase",state:"checked"}),e=_slicedToArray(C,2),C=e[0],g=e[1],F=useFormControl(),e=a;F&&void 0===e&&(e=F.disabled);a="checkbox"===k||"radio"===k;return React.createElement(IconButton,_extends({component:"span",className:clsx(n.root,p,C&&n.checked,e&&n.disabled),disabled:e,tabIndex:null,role:void 0,onFocus:function(e){f&&f(e),F&&F.onFocus&&F.onFocus(e)},onBlur:function(e){y&&y(e),F&&F.onBlur&&F.onBlur(e)},ref:o},B),React.createElement("input",_extends({autoFocus:r,checked:t,defaultChecked:i,className:n.input,disabled:e,id:a&&l,name:m,onChange:function(e){var o=e.target.checked;g(o),h&&h(e,o)},readOnly:b,ref:u,required:P,tabIndex:T,type:k,value:x},d)),C?s:c)});"production"!==process.env.NODE_ENV&&(SwitchBase.propTypes={autoFocus:PropTypes.bool,checked:PropTypes.bool,checkedIcon:PropTypes.node.isRequired,classes:PropTypes.object.isRequired,className:PropTypes.string,defaultChecked:PropTypes.bool,disabled:PropTypes.bool,icon:PropTypes.node.isRequired,id:PropTypes.string,inputProps:PropTypes.object,inputRef:refType,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onFocus:PropTypes.func,readOnly:PropTypes.bool,required:PropTypes.bool,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),type:PropTypes.string.isRequired,value:PropTypes.any});export default withStyles(styles,{name:"PrivateSwitchBase"})(SwitchBase);export{styles};