import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import capitalize from"../utils/capitalize";import withStyles from"../styles/withStyles";import{elementTypeAcceptingRef}from"@material-ui/utils";import useIsFocusVisible from"../utils/useIsFocusVisible";import useForkRef from"../utils/useForkRef";import Typography from"../Typography";var styles={root:{},underlineNone:{textDecoration:"none"},underlineHover:{textDecoration:"none","&:hover":{textDecoration:"underline"}},underlineAlways:{textDecoration:"underline"},button:{position:"relative",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle","-moz-appearance":"none","-webkit-appearance":"none","&::-moz-focus-inner":{borderStyle:"none"},"&$focusVisible":{outline:"auto"}},focusVisible:{}},Link=React.forwardRef(function(e,o){var r=e.classes,t=e.className,i=e.color,s=void 0===i?"primary":i,n=e.component,a=void 0===n?"a":n,p=e.onBlur,l=e.onFocus,c=e.TypographyClasses,u=e.underline,m=void 0===u?"hover":u,i=e.variant,n=void 0===i?"inherit":i,u=_objectWithoutProperties(e,["classes","className","color","component","onBlur","onFocus","TypographyClasses","underline","variant"]),i=useIsFocusVisible(),y=i.isFocusVisible,d=i.onBlurVisible,e=i.ref,i=React.useState(!1),f=i[0],b=i[1],e=useForkRef(o,e);return React.createElement(Typography,_extends({className:clsx(r.root,r["underline".concat(capitalize(m))],t,f&&r.focusVisible,"button"===a&&r.button),classes:c,color:s,component:a,onBlur:function(e){f&&(d(),b(!1)),p&&p(e)},onFocus:function(e){y(e)&&b(!0),l&&l(e)},ref:e,variant:n},u))});"production"!==process.env.NODE_ENV&&(Link.propTypes={children:PropTypes.node.isRequired,classes:PropTypes.object.isRequired,className:PropTypes.string,color:PropTypes.oneOf(["initial","inherit","primary","secondary","textPrimary","textSecondary","error"]),component:elementTypeAcceptingRef,onBlur:PropTypes.func,onFocus:PropTypes.func,TypographyClasses:PropTypes.object,underline:PropTypes.oneOf(["none","hover","always"]),variant:PropTypes.string});export default withStyles(styles,{name:"MuiLink"})(Link);export{styles};