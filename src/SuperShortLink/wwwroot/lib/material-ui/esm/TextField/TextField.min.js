import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import deprecatedPropType from"../utils/deprecatedPropType";import Input from"../Input";import FilledInput from"../FilledInput";import OutlinedInput from"../OutlinedInput";import InputLabel from"../InputLabel";import FormControl from"../FormControl";import FormHelperText from"../FormHelperText";import Select from"../Select";import withStyles from"../styles/withStyles";var variantComponent={standard:Input,filled:FilledInput,outlined:OutlinedInput},styles={root:{}},TextField=React.forwardRef(function(e,o){var r=e.autoComplete,t=e.autoFocus,p=void 0!==t&&t,s=e.children,l=e.classes,n=e.className,i=e.color,a=void 0===i?"primary":i,d=e.defaultValue,u=e.disabled,m=void 0!==u&&u,c=e.error,y=void 0!==c&&c,T=e.FormHelperTextProps,P=e.fullWidth,b=void 0!==P&&P,f=e.helperText,h=e.hiddenLabel,x=e.id,v=e.InputLabelProps,F=e.inputProps,w=e.InputProps,R=e.inputRef,I=e.label,g=e.multiline,C=void 0!==g&&g,O=e.name,E=e.onBlur,L=e.onChange,_=e.onFocus,j=e.placeholder,S=e.required,N=void 0!==S&&S,W=e.rows,H=e.rowsMax,M=e.maxRows,V=e.minRows,t=e.select,i=void 0!==t&&t,u=e.SelectProps,c=e.type,P=e.value,g=e.variant,S=void 0===g?"standard":g,t=_objectWithoutProperties(e,["autoComplete","autoFocus","children","classes","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","label","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","rowsMax","maxRows","minRows","select","SelectProps","type","value","variant"]);"production"!==process.env.NODE_ENV&&i&&!s&&console.error("Material-UI: `children` must be passed when using the `TextField` component with `select`.");g={};"outlined"===S&&(v&&void 0!==v.shrink&&(g.notched=v.shrink),I&&(B=null!==(q=null==v?void 0:v.required)&&void 0!==q?q:N,g.label=React.createElement(React.Fragment,null,I,B&&"Â *"))),i&&(u&&u.native||(g.id=void 0),g["aria-describedby"]=void 0);var e=f&&x?"".concat(x,"-helper-text"):void 0,q=I&&x?"".concat(x,"-label"):void 0,B=variantComponent[S],w=React.createElement(B,_extends({"aria-describedby":e,autoComplete:r,autoFocus:p,defaultValue:d,fullWidth:b,multiline:C,name:O,rows:W,rowsMax:H,maxRows:M,minRows:V,type:c,value:P,id:x,inputRef:R,onBlur:E,onChange:L,onFocus:_,placeholder:j,inputProps:F},g,w));return React.createElement(FormControl,_extends({className:clsx(l.root,n),disabled:m,error:y,fullWidth:b,hiddenLabel:h,ref:o,required:N,color:a,variant:S},t),I&&React.createElement(InputLabel,_extends({htmlFor:x,id:q},v),I),i?React.createElement(Select,_extends({"aria-describedby":e,id:x,labelId:q,value:P,input:w},u),s):w,f&&React.createElement(FormHelperText,_extends({id:e},T),f))});"production"!==process.env.NODE_ENV&&(TextField.propTypes={autoComplete:PropTypes.string,autoFocus:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,color:PropTypes.oneOf(["primary","secondary"]),defaultValue:PropTypes.any,disabled:PropTypes.bool,error:PropTypes.bool,FormHelperTextProps:PropTypes.object,fullWidth:PropTypes.bool,helperText:PropTypes.node,hiddenLabel:PropTypes.bool,id:PropTypes.string,InputLabelProps:PropTypes.object,inputProps:PropTypes.object,InputProps:PropTypes.object,inputRef:refType,label:PropTypes.node,margin:PropTypes.oneOf(["dense","none","normal"]),maxRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),minRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),multiline:PropTypes.bool,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onFocus:PropTypes.func,placeholder:PropTypes.string,required:PropTypes.bool,rows:deprecatedPropType(PropTypes.oneOfType([PropTypes.number,PropTypes.string]),"Use `minRows` instead"),rowsMax:deprecatedPropType(PropTypes.oneOfType([PropTypes.number,PropTypes.string]),"Use `maxRows` instead"),select:PropTypes.bool,SelectProps:PropTypes.object,size:PropTypes.oneOf(["medium","small"]),type:PropTypes.string,value:PropTypes.any,variant:PropTypes.oneOf(["filled","outlined","standard"])});export default withStyles(styles,{name:"MuiTextField"})(TextField);export{styles};