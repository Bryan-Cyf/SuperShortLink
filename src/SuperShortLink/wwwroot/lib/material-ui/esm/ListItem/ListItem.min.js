import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{chainPropTypes}from"@material-ui/utils";import withStyles from"../styles/withStyles";import ButtonBase from"../ButtonBase";import isMuiElement from"../utils/isMuiElement";import useForkRef from"../utils/useForkRef";import ListContext from"../List/ListContext";import*as ReactDOM from"react-dom";var styles=function(e){return{root:{display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",width:"100%",boxSizing:"border-box",textAlign:"left",paddingTop:8,paddingBottom:8,"&$focusVisible":{backgroundColor:e.palette.action.selected},"&$selected, &$selected:hover":{backgroundColor:e.palette.action.selected},"&$disabled":{opacity:.5}},container:{position:"relative"},focusVisible:{},dense:{paddingTop:4,paddingBottom:4},alignItemsFlexStart:{alignItems:"flex-start"},disabled:{},divider:{borderBottom:"1px solid ".concat(e.palette.divider),backgroundClip:"padding-box"},gutters:{paddingLeft:16,paddingRight:16},button:{transition:e.transitions.create("background-color",{duration:e.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:e.palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}}},secondaryAction:{paddingRight:48},selected:{}}},useEnhancedEffect="undefined"==typeof window?React.useEffect:React.useLayoutEffect,ListItem=React.forwardRef(function(e,t){var o=e.alignItems,s=void 0===o?"center":o,i=e.autoFocus,n=void 0!==i&&i,r=e.button,a=void 0!==r&&r,l=e.children,c=e.classes,d=e.className,p=e.component,m=e.ContainerComponent,u=void 0===m?"li":m,f=e.ContainerProps,b=(f=void 0===f?{}:f).className,y=_objectWithoutProperties(f,["className"]),h=e.dense,v=void 0!==h&&h,g=e.disabled,o=void 0!==g&&g,i=e.disableGutters,r=void 0!==i&&i,m=e.divider,f=void 0!==m&&m,h=e.focusVisibleClassName,g=e.selected,i=void 0!==g&&g,m=_objectWithoutProperties(e,["alignItems","autoFocus","button","children","classes","className","component","ContainerComponent","ContainerProps","dense","disabled","disableGutters","divider","focusVisibleClassName","selected"]),g=React.useContext(ListContext),e={dense:v||g.dense||!1,alignItems:s},x=React.useRef(null);useEnhancedEffect(function(){n&&(x.current?x.current.focus():"production"!==process.env.NODE_ENV&&console.error("Material-UI: Unable to set focus to a ListItem whose component has not been rendered."))},[n]);v=React.Children.toArray(l),g=v.length&&isMuiElement(v[v.length-1],["ListItemSecondaryAction"]),l=React.useCallback(function(e){x.current=ReactDOM.findDOMNode(e)},[]),t=useForkRef(l,t),o=_extends({className:clsx(c.root,d,e.dense&&c.dense,!r&&c.gutters,f&&c.divider,o&&c.disabled,a&&c.button,"center"!==s&&c.alignItemsFlexStart,g&&c.secondaryAction,i&&c.selected),disabled:o},m),m=p||"li";return a&&(o.component=p||"div",o.focusVisibleClassName=clsx(c.focusVisible,h),m=ButtonBase),g?(m=o.component||p?m:"div","li"===u&&("li"===m?m="div":"li"===o.component&&(o.component="div")),React.createElement(ListContext.Provider,{value:e},React.createElement(u,_extends({className:clsx(c.container,b),ref:t},y),React.createElement(m,o,v),v.pop()))):React.createElement(ListContext.Provider,{value:e},React.createElement(m,_extends({ref:t},o),v))});"production"!==process.env.NODE_ENV&&(ListItem.propTypes={alignItems:PropTypes.oneOf(["flex-start","center"]),autoFocus:PropTypes.bool,button:PropTypes.bool,children:chainPropTypes(PropTypes.node,function(e){for(var t=React.Children.toArray(e.children),o=-1,s=t.length-1;0<=s;--s){var i=t[s];if(isMuiElement(i,["ListItemSecondaryAction"])){o=s;break}}return-1!==o&&o!==t.length-1?new Error("Material-UI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem."):null}),classes:PropTypes.object.isRequired,className:PropTypes.string,component:PropTypes.elementType,ContainerComponent:PropTypes.elementType,ContainerProps:PropTypes.object,dense:PropTypes.bool,disabled:PropTypes.bool,disableGutters:PropTypes.bool,divider:PropTypes.bool,focusVisibleClassName:PropTypes.string,selected:PropTypes.bool});export default withStyles(styles,{name:"MuiListItem"})(ListItem);export{styles};