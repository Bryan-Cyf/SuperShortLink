import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import*as ReactDOM from"react-dom";import{chainPropTypes,elementTypeAcceptingRef,refType,HTMLElementType}from"@material-ui/utils";import debounce from"../utils/debounce";import clsx from"clsx";import ownerDocument from"../utils/ownerDocument";import ownerWindow from"../utils/ownerWindow";import createChainedFunction from"../utils/createChainedFunction";import deprecatedPropType from"../utils/deprecatedPropType";import withStyles from"../styles/withStyles";import Modal from"../Modal";import Grow from"../Grow";import Paper from"../Paper";function getOffsetTop(e,o){let t=0;return"number"==typeof o?t=o:"center"===o?t=e.height/2:"bottom"===o&&(t=e.height),t}function getOffsetLeft(e,o){let t=0;return"number"==typeof o?t=o:"center"===o?t=e.width/2:"right"===o&&(t=e.width),t}function getTransformOriginValue(e){return[e.horizontal,e.vertical].map(e=>"number"==typeof e?`${e}px`:e).join(" ")}function getScrollParent(e,o){let t=o,n=0;for(;t&&t!==e;)t=t.parentElement,n+=t.scrollTop;return n}function getAnchorEl(e){return"function"==typeof e?e():e}const styles={root:{},paper:{position:"absolute",overflowY:"auto",overflowX:"hidden",minWidth:16,minHeight:16,maxWidth:"calc(100% - 32px)",maxHeight:"calc(100% - 32px)",outline:0}},Popover=React.forwardRef(function(e,o){const{action:t,anchorEl:c,anchorOrigin:r={vertical:"top",horizontal:"left"},anchorPosition:i,anchorReference:l="anchorEl",children:n,classes:p,className:a,container:s,elevation:h=8,getContentAnchorEl:u,marginThreshold:f=16,onEnter:d,onEntered:m,onEntering:T,onExit:y,onExited:P,onExiting:g,open:E,PaperProps:v={},transformOrigin:b={vertical:"top",horizontal:"left"},TransitionComponent:O=Grow,transitionDuration:R="auto",TransitionProps:x={}}=e,w=_objectWithoutPropertiesLoose(e,["action","anchorEl","anchorOrigin","anchorPosition","anchorReference","children","classes","className","container","elevation","getContentAnchorEl","marginThreshold","onEnter","onEntered","onEntering","onExit","onExited","onExiting","open","PaperProps","transformOrigin","TransitionComponent","transitionDuration","TransitionProps"]),C=React.useRef(),N=React.useCallback(e=>{if("anchorPosition"===l)return"production"!==process.env.NODE_ENV&&(i||console.error('Material-UI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')),i;var o=getAnchorEl(c);const t=o&&1===o.nodeType?o:ownerDocument(C.current).body;var n=t.getBoundingClientRect();"production"!==process.env.NODE_ENV&&(o=t.getBoundingClientRect(),"test"!==process.env.NODE_ENV&&0===o.top&&0===o.left&&0===o.right&&0===o.bottom&&console.warn(["Material-UI: The `anchorEl` prop provided to the component is invalid.","The anchor element should be part of the document layout.","Make sure the element is present in the document or that it's not display none."].join("\n")));e=0===e?r.vertical:"center";return{top:n.top+getOffsetTop(n,e),left:n.left+getOffsetLeft(n,r.horizontal)}},[c,r.horizontal,r.vertical,i,l]),M=React.useCallback(e=>{let o=0;var t;return u&&"anchorEl"===l&&((t=u(e))&&e.contains(t)&&(e=getScrollParent(e,t),o=t.offsetTop+t.clientHeight/2-e||0),"production"!==process.env.NODE_ENV&&"top"!==r.vertical&&console.error(["Material-UI: You can not change the default `anchorOrigin.vertical` value ","when also providing the `getContentAnchorEl` prop to the popover component.","Only use one of the two props.","Set `getContentAnchorEl` to `null | undefined` or leave `anchorOrigin.vertical` unchanged."].join("\n"))),o},[r.vertical,l,u]),D=React.useCallback((e,o=0)=>({vertical:getOffsetTop(e,b.vertical)+o,horizontal:getOffsetLeft(e,b.horizontal)}),[b.horizontal,b.vertical]),z=React.useCallback(e=>{var o=M(e),t={width:e.offsetWidth,height:e.offsetHeight};const n=D(t,o);if("none"===l)return{top:null,left:null,transformOrigin:getTransformOriginValue(n)};var r=N(o);let i=r.top-n.vertical,p=r.left-n.horizontal;var a=i+t.height,s=p+t.width,e=ownerWindow(getAnchorEl(c)),o=e.innerHeight-f,r=e.innerWidth-f;return i<f?(e=i-f,i-=e,n.vertical+=e):o<a&&(a=a-o,i-=a,n.vertical+=a),"production"!==process.env.NODE_ENV&&o<t.height&&t.height&&o&&console.error(["Material-UI: The popover component is too tall.",`Some part of it can not be seen on the screen (${t.height-o}px).`,"Please consider adding a `max-height` to improve the user-experience."].join("\n")),p<f?(o=p-f,p-=o,n.horizontal+=o):r<s&&(r=s-r,p-=r,n.horizontal+=r),{top:`${Math.round(i)}px`,left:`${Math.round(p)}px`,transformOrigin:getTransformOriginValue(n)}},[c,l,N,M,D,f]),A=React.useCallback(()=>{const e=C.current;var o;e&&(null!==(o=z(e)).top&&(e.style.top=o.top),null!==o.left&&(e.style.left=o.left),e.style.transformOrigin=o.transformOrigin)},[z]);var _=React.useCallback(e=>{C.current=ReactDOM.findDOMNode(e)},[]);React.useEffect(()=>{E&&A()}),React.useImperativeHandle(t,()=>E?{updatePosition:()=>{A()}}:null,[E,A]),React.useEffect(()=>{if(E){const e=debounce(()=>{A()});return window.addEventListener("resize",e),()=>{e.clear(),window.removeEventListener("resize",e)}}},[E,A]);let L=R;"auto"!==R||O.muiSupportAuto||(L=void 0);e=s||(c?ownerDocument(getAnchorEl(c)).body:void 0);return React.createElement(Modal,_extends({container:e,open:E,ref:o,BackdropProps:{invisible:!0},className:clsx(p.root,a)},w),React.createElement(O,_extends({appear:!0,in:E,onEnter:d,onEntered:m,onExit:y,onExited:P,onExiting:g,timeout:L},x,{onEntering:createChainedFunction((e,o)=>{T&&T(e,o),A()},x.onEntering)}),React.createElement(Paper,_extends({elevation:h,ref:_},v,{className:clsx(p.paper,v.className)}),n)))});"production"!==process.env.NODE_ENV&&(Popover.propTypes={action:refType,anchorEl:chainPropTypes(PropTypes.oneOfType([HTMLElementType,PropTypes.func]),e=>{if(e.open&&(!e.anchorReference||"anchorEl"===e.anchorReference)){const o=getAnchorEl(e.anchorEl);if(!o||1!==o.nodeType)return new Error(["Material-UI: The `anchorEl` prop provided to the component is invalid.",`It should be an Element instance but it's \`${o}\` instead.`].join("\n"));e=o.getBoundingClientRect();if("test"!==process.env.NODE_ENV&&0===e.top&&0===e.left&&0===e.right&&0===e.bottom)return new Error(["Material-UI: The `anchorEl` prop provided to the component is invalid.","The anchor element should be part of the document layout.","Make sure the element is present in the document or that it's not display none."].join("\n"))}return null}),anchorOrigin:PropTypes.shape({horizontal:PropTypes.oneOfType([PropTypes.oneOf(["center","left","right"]),PropTypes.number]).isRequired,vertical:PropTypes.oneOfType([PropTypes.oneOf(["bottom","center","top"]),PropTypes.number]).isRequired}),anchorPosition:PropTypes.shape({left:PropTypes.number.isRequired,top:PropTypes.number.isRequired}),anchorReference:PropTypes.oneOf(["anchorEl","anchorPosition","none"]),children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,container:PropTypes.oneOfType([HTMLElementType,PropTypes.instanceOf(React.Component),PropTypes.func]),elevation:PropTypes.number,getContentAnchorEl:PropTypes.func,marginThreshold:PropTypes.number,onClose:PropTypes.func,onEnter:deprecatedPropType(PropTypes.func,"Use the `TransitionProps` prop instead."),onEntered:deprecatedPropType(PropTypes.func,"Use the `TransitionProps` prop instead."),onEntering:deprecatedPropType(PropTypes.func,"Use the `TransitionProps` prop instead."),onExit:deprecatedPropType(PropTypes.func,"Use the `TransitionProps` prop instead."),onExited:deprecatedPropType(PropTypes.func,"Use the `TransitionProps` prop instead."),onExiting:deprecatedPropType(PropTypes.func,"Use the `TransitionProps` prop instead."),open:PropTypes.bool.isRequired,PaperProps:PropTypes.shape({component:elementTypeAcceptingRef}),transformOrigin:PropTypes.shape({horizontal:PropTypes.oneOfType([PropTypes.oneOf(["center","left","right"]),PropTypes.number]).isRequired,vertical:PropTypes.oneOfType([PropTypes.oneOf(["bottom","center","top"]),PropTypes.number]).isRequired}),TransitionComponent:PropTypes.elementType,transitionDuration:PropTypes.oneOfType([PropTypes.oneOf(["auto"]),PropTypes.number,PropTypes.shape({appear:PropTypes.number,enter:PropTypes.number,exit:PropTypes.number})]),TransitionProps:PropTypes.object});export default withStyles(styles,{name:"MuiPopover"})(Popover);export{getOffsetTop,getOffsetLeft,styles};