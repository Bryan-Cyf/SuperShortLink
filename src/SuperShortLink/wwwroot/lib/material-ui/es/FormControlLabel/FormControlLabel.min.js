import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import{useFormControl}from"../FormControl";import withStyles from"../styles/withStyles";import Typography from"../Typography";import capitalize from"../utils/capitalize";const styles=e=>({root:{display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,"&$disabled":{cursor:"default"}},labelPlacementStart:{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},labelPlacementTop:{flexDirection:"column-reverse",marginLeft:16},labelPlacementBottom:{flexDirection:"column",marginLeft:16},disabled:{},label:{"&$disabled":{color:e.palette.text.disabled}}}),FormControlLabel=React.forwardRef(function(o,e){const{classes:t,className:l,control:r,disabled:a,label:s,labelPlacement:i="end"}=o,n=_objectWithoutPropertiesLoose(o,["checked","classes","className","control","disabled","inputRef","label","labelPlacement","name","onChange","value"]);var p=useFormControl();let m=a;void 0===m&&void 0!==r.props.disabled&&(m=r.props.disabled),void 0===m&&p&&(m=p.disabled);const c={disabled:m};return["checked","name","onChange","value","inputRef"].forEach(e=>{void 0===r.props[e]&&void 0!==o[e]&&(c[e]=o[e])}),React.createElement("label",_extends({className:clsx(t.root,l,"end"!==i&&t[`labelPlacement${capitalize(i)}`],m&&t.disabled),ref:e},n),React.cloneElement(r,c),React.createElement(Typography,{component:"span",className:clsx(t.label,m&&t.disabled)},s))});"production"!==process.env.NODE_ENV&&(FormControlLabel.propTypes={checked:PropTypes.bool,classes:PropTypes.object,className:PropTypes.string,control:PropTypes.element.isRequired,disabled:PropTypes.bool,inputRef:refType,label:PropTypes.node,labelPlacement:PropTypes.oneOf(["bottom","end","start","top"]),name:PropTypes.string,onChange:PropTypes.func,value:PropTypes.any});export default withStyles(styles,{name:"MuiFormControlLabel"})(FormControlLabel);export{styles};