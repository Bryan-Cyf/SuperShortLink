import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import deprecatedPropType from"../utils/deprecatedPropType";import Input from"../Input";import FilledInput from"../FilledInput";import OutlinedInput from"../OutlinedInput";import InputLabel from"../InputLabel";import FormControl from"../FormControl";import FormHelperText from"../FormHelperText";import Select from"../Select";import withStyles from"../styles/withStyles";const variantComponent={standard:Input,filled:FilledInput,outlined:OutlinedInput},styles={root:{}},TextField=React.forwardRef(function(e,o){var{autoComplete:r,autoFocus:t=!1,children:p,classes:s,className:l,color:n="primary",defaultValue:a,disabled:i=!1,error:d=!1,FormHelperTextProps:u,fullWidth:m=!1,helperText:c,hiddenLabel:y,id:T,InputLabelProps:P,inputProps:b,InputProps:f,inputRef:h,label:x,multiline:F=!1,name:w,onBlur:R,onChange:v,onFocus:I,placeholder:g,required:C=!1,rows:L,rowsMax:O,maxRows:E,minRows:_,select:j=!1,SelectProps:S,type:N,value:W,variant:H="standard"}=e,M=_objectWithoutPropertiesLoose(e,["autoComplete","autoFocus","children","classes","className","color","defaultValue","disabled","error","FormHelperTextProps","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","label","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","rowsMax","maxRows","minRows","select","SelectProps","type","value","variant"]);"production"!==process.env.NODE_ENV&&j&&!p&&console.error("Material-UI: `children` must be passed when using the `TextField` component with `select`.");const V={};"outlined"===H&&(P&&void 0!==P.shrink&&(V.notched=P.shrink),x&&(B=P?.required??C,V.label=React.createElement(React.Fragment,null,x,B&&"Â *"))),j&&(S&&S.native||(V.id=void 0),V["aria-describedby"]=void 0);var q=c&&T?`${T}-helper-text`:void 0,e=x&&T?`${T}-label`:void 0,B=variantComponent[H],f=React.createElement(B,_extends({"aria-describedby":q,autoComplete:r,autoFocus:t,defaultValue:a,fullWidth:m,multiline:F,name:w,rows:L,rowsMax:O,maxRows:E,minRows:_,type:N,value:W,id:T,inputRef:h,onBlur:R,onChange:v,onFocus:I,placeholder:g,inputProps:b},V,f));return React.createElement(FormControl,_extends({className:clsx(s.root,l),disabled:i,error:d,fullWidth:m,hiddenLabel:y,ref:o,required:C,color:n,variant:H},M),x&&React.createElement(InputLabel,_extends({htmlFor:T,id:e},P),x),j?React.createElement(Select,_extends({"aria-describedby":q,id:T,labelId:e,value:W,input:f},S),p):f,c&&React.createElement(FormHelperText,_extends({id:q},u),c))});"production"!==process.env.NODE_ENV&&(TextField.propTypes={autoComplete:PropTypes.string,autoFocus:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,color:PropTypes.oneOf(["primary","secondary"]),defaultValue:PropTypes.any,disabled:PropTypes.bool,error:PropTypes.bool,FormHelperTextProps:PropTypes.object,fullWidth:PropTypes.bool,helperText:PropTypes.node,hiddenLabel:PropTypes.bool,id:PropTypes.string,InputLabelProps:PropTypes.object,inputProps:PropTypes.object,InputProps:PropTypes.object,inputRef:refType,label:PropTypes.node,margin:PropTypes.oneOf(["dense","none","normal"]),maxRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),minRows:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),multiline:PropTypes.bool,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onFocus:PropTypes.func,placeholder:PropTypes.string,required:PropTypes.bool,rows:deprecatedPropType(PropTypes.oneOfType([PropTypes.number,PropTypes.string]),"Use `minRows` instead"),rowsMax:deprecatedPropType(PropTypes.oneOfType([PropTypes.number,PropTypes.string]),"Use `maxRows` instead"),select:PropTypes.bool,SelectProps:PropTypes.object,size:PropTypes.oneOf(["medium","small"]),type:PropTypes.string,value:PropTypes.any,variant:PropTypes.oneOf(["filled","outlined","standard"])});export default withStyles(styles,{name:"MuiTextField"})(TextField);export{styles};