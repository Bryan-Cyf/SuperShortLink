import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import Typography from"../Typography";import withStyles from"../styles/withStyles";import FormControlContext,{useFormControl}from"../FormControl/FormControlContext";const styles={root:{display:"flex",height:"0.01em",maxHeight:"2em",alignItems:"center",whiteSpace:"nowrap"},filled:{"&$positionStart:not($hiddenLabel)":{marginTop:16}},positionStart:{marginRight:8},positionEnd:{marginLeft:8},disablePointerEvents:{pointerEvents:"none"},hiddenLabel:{},marginDense:{}},InputAdornment=React.forwardRef(function(e,o){var{children:t,classes:r,className:n,component:s="div",disablePointerEvents:i=!1,disableTypography:a=!1,position:p,variant:l}=e,m=_objectWithoutPropertiesLoose(e,["children","classes","className","component","disablePointerEvents","disableTypography","position","variant"]),e=useFormControl()||{};let d=l;return l&&e.variant&&"production"!==process.env.NODE_ENV&&l===e.variant&&console.error("Material-UI: The `InputAdornment` variant infers the variant prop you do not have to provide one."),e&&!d&&(d=e.variant),React.createElement(FormControlContext.Provider,{value:null},React.createElement(s,_extends({className:clsx(r.root,n,"end"===p?r.positionEnd:r.positionStart,i&&r.disablePointerEvents,e.hiddenLabel&&r.hiddenLabel,"filled"===d&&r.filled,"dense"===e.margin&&r.marginDense),ref:o},m),"string"!=typeof t||a?t:React.createElement(Typography,{color:"textSecondary"},t)))});"production"!==process.env.NODE_ENV&&(InputAdornment.propTypes={children:PropTypes.node.isRequired,classes:PropTypes.object.isRequired,className:PropTypes.string,component:PropTypes.elementType,disablePointerEvents:PropTypes.bool,disableTypography:PropTypes.bool,muiFormControl:PropTypes.object,position:PropTypes.oneOf(["start","end"]).isRequired,variant:PropTypes.oneOf(["standard","outlined","filled"])});export default withStyles(styles,{name:"MuiInputAdornment"})(InputAdornment);export{styles};