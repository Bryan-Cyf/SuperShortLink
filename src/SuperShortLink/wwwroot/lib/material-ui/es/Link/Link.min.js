import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import capitalize from"../utils/capitalize";import withStyles from"../styles/withStyles";import{elementTypeAcceptingRef}from"@material-ui/utils";import useIsFocusVisible from"../utils/useIsFocusVisible";import useForkRef from"../utils/useForkRef";import Typography from"../Typography";const styles={root:{},underlineNone:{textDecoration:"none"},underlineHover:{textDecoration:"none","&:hover":{textDecoration:"underline"}},underlineAlways:{textDecoration:"underline"},button:{position:"relative",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle","-moz-appearance":"none","-webkit-appearance":"none","&::-moz-focus-inner":{borderStyle:"none"},"&$focusVisible":{outline:"auto"}},focusVisible:{}},Link=React.forwardRef(function(e,o){const{classes:r,className:t,color:s="primary",component:n="a",onBlur:i,onFocus:a,TypographyClasses:p,underline:l="hover",variant:c="inherit"}=e,u=_objectWithoutPropertiesLoose(e,["classes","className","color","component","onBlur","onFocus","TypographyClasses","underline","variant"]),{isFocusVisible:m,onBlurVisible:y,ref:d}=useIsFocusVisible(),[f,b]=React.useState(!1);o=useForkRef(o,d);return React.createElement(Typography,_extends({className:clsx(r.root,r[`underline${capitalize(l)}`],t,f&&r.focusVisible,"button"===n&&r.button),classes:p,color:s,component:n,onBlur:e=>{f&&(y(),b(!1)),i&&i(e)},onFocus:e=>{m(e)&&b(!0),a&&a(e)},ref:o,variant:c},u))});"production"!==process.env.NODE_ENV&&(Link.propTypes={children:PropTypes.node.isRequired,classes:PropTypes.object.isRequired,className:PropTypes.string,color:PropTypes.oneOf(["initial","inherit","primary","secondary","textPrimary","textSecondary","error"]),component:elementTypeAcceptingRef,onBlur:PropTypes.func,onFocus:PropTypes.func,TypographyClasses:PropTypes.object,underline:PropTypes.oneOf(["none","hover","always"]),variant:PropTypes.string});export default withStyles(styles,{name:"MuiLink"})(Link);export{styles};