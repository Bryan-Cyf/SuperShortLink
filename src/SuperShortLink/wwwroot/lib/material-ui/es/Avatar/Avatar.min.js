import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{chainPropTypes}from"@material-ui/utils";import withStyles from"../styles/withStyles";import Person from"../internal/svg-icons/Person";const styles=e=>({root:{position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none"},colorDefault:{color:e.palette.background.default,backgroundColor:"light"===e.palette.type?e.palette.grey[400]:e.palette.grey[600]},circle:{},circular:{},rounded:{borderRadius:e.shape.borderRadius},square:{borderRadius:0},img:{width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4},fallback:{width:"75%",height:"75%"}});function useLoaded({src:t,srcSet:s}){const[e,o]=React.useState(!1);return React.useEffect(()=>{if(t||s){o(!1);let e=!0;const r=new Image;return r.src=t,r.srcSet=s,r.onload=()=>{e&&o("loaded")},r.onerror=()=>{e&&o("error")},()=>{e=!1}}},[t,s]),e}const Avatar=React.forwardRef(function(e,r){var{alt:t,children:s,classes:o,className:a,component:i="div",imgProps:c,sizes:l,src:n,srcSet:p,variant:u="circular"}=e,d=_objectWithoutPropertiesLoose(e,["alt","children","classes","className","component","imgProps","sizes","src","srcSet","variant"]);let m=null;var y=useLoaded({src:n,srcSet:p}),e=n||p,y=e&&"error"!==y;return m=y?React.createElement("img",_extends({alt:t,src:n,srcSet:p,sizes:l,className:o.img},c)):null!=s?s:e&&t?t[0]:React.createElement(Person,{className:o.fallback}),React.createElement(i,_extends({className:clsx(o.root,o.system,o[u],a,!y&&o.colorDefault),ref:r},d),m)});"production"!==process.env.NODE_ENV&&(Avatar.propTypes={alt:PropTypes.string,children:PropTypes.node,classes:chainPropTypes(PropTypes.object,e=>{const r=e["classes"];if(null==r)return null;if(null!=r.circle&&1<r.circle.split(" ").length)throw new Error("Material-UI: The `circle` class is deprecated. Use `circular` instead.");return null}),className:PropTypes.string,component:PropTypes.elementType,imgProps:PropTypes.object,sizes:PropTypes.string,src:PropTypes.string,srcSet:PropTypes.string,variant:chainPropTypes(PropTypes.oneOf(["circle","circular","rounded","square"]),e=>{var e=e["variant"];if("circle"===e)throw new Error('Material-UI: `variant="circle"` is deprecated. Use `variant="circular"` instead.');return null})});export default withStyles(styles,{name:"MuiAvatar"})(Avatar);export{styles};