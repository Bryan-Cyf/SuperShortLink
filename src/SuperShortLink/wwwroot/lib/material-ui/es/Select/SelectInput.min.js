import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import{formatMuiErrorMessage as _formatMuiErrorMessage}from"@material-ui/utils";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import ownerDocument from"../utils/ownerDocument";import capitalize from"../utils/capitalize";import{refType}from"@material-ui/utils";import Menu from"../Menu/Menu";import{isFilled}from"../InputBase/utils";import useForkRef from"../utils/useForkRef";import useControlled from"../utils/useControlled";function areEqualValues(e,o){return"object"==typeof o&&null!==o?e===o:String(e)===String(o)}function isEmpty(e){return null==e||"string"==typeof e&&!e.trim()}const SelectInput=React.forwardRef(function(e,o){const{"aria-label":t,autoFocus:r,autoWidth:a,children:n,classes:l,className:s,defaultValue:p,disabled:i,displayEmpty:u,IconComponent:c,inputRef:d,labelId:m,MenuProps:f={},multiple:y,name:v,onBlur:b,onChange:P,onClose:h,onFocus:T,onOpen:E,open:R,readOnly:g,renderValue:x,SelectDisplayProps:I={},tabIndex:C,value:M,variant:O="standard"}=e,F=_objectWithoutPropertiesLoose(e,["aria-label","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","SelectDisplayProps","tabIndex","type","value","variant"]),[_,w]=useControlled({controlled:M,default:p,name:"Select"}),D=React.useRef(null),[S,j]=React.useState(null),N=React.useRef(null!=R)["current"],[V,k]=React.useState(),[W,A]=React.useState(!1);o=useForkRef(o,d);React.useImperativeHandle(o,()=>({focus:()=>{S.focus()},node:D.current,value:_}),[S,_]),React.useEffect(()=>{r&&S&&S.focus()},[r,S]),React.useEffect(()=>{if(S){const e=ownerDocument(S).getElementById(m);if(e){const o=()=>{getSelection().isCollapsed&&S.focus()};return e.addEventListener("click",o),()=>{e.removeEventListener("click",o)}}}},[m,S]);const L=(e,o)=>{e?E&&E(o):h&&h(o),N||(k(a?null:S.clientWidth),A(e))};const $=React.Children.toArray(n);const B=null!==S&&(N?R:W);delete F["aria-invalid"];let U,q;const K=[];let z=!1,H=!1;(isFilled({value:_})||u)&&(x?U=x(_):z=!0);o=$.map(o=>{if(!React.isValidElement(o))return null;"production"!==process.env.NODE_ENV&&isFragment(o)&&console.error(["Material-UI: The Select component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));let e;if(y){if(!Array.isArray(_))throw new Error("production"!==process.env.NODE_ENV?"Material-UI: The `value` prop must be an array when using the `Select` component with `multiple`.":_formatMuiErrorMessage(2));e=_.some(e=>areEqualValues(e,o.props.value)),e&&z&&K.push(o.props.children)}else e=areEqualValues(_,o.props.value),e&&z&&(q=o.props.children);return e&&(H=!0),React.cloneElement(o,{"aria-selected":e?"true":void 0,onClick:(r=o,e=>{y||L(!1,e);let o;var t;y?(o=Array.isArray(_)?_.slice():[],-1===(t=_.indexOf(r.props.value))?o.push(r.props.value):o.splice(t,1)):o=r.props.value,r.props.onClick&&r.props.onClick(e),_!==o&&(w(o),P&&(e.persist(),Object.defineProperty(e,"target",{writable:!0,value:{value:o,name:v}}),P(e,r)))}),onKeyUp:e=>{" "===e.key&&e.preventDefault(),o.props.onKeyUp&&o.props.onKeyUp(e)},role:"option",selected:e,value:void 0,"data-value":o.props.value});var r});"production"!==process.env.NODE_ENV&&React.useEffect(()=>{if(!H&&!y&&""!==_){const e=$.map(e=>e.props.value);console.warn([`Material-UI: You have provided an out-of-range value \`${_}\` for the select ${v?`(name="${v}") `:""}component.`,"Consider providing a value that matches one of the available options or ''.",`The available values are ${e.filter(e=>null!=e).map(e=>`\`${e}\``).join(", ")||'""'}.`].join("\n"))}},[H,$,y,v,_]),z&&(U=y?K.join(", "):q);let Y=V;!a&&N&&S&&(Y=S.clientWidth);let G;G=void 0!==C?C:i?null:0;const J=I.id||(v?`mui-component-select-${v}`:void 0);return React.createElement(React.Fragment,null,React.createElement("div",_extends({className:clsx(l.root,l.select,l.selectMenu,l[O],s,i&&l.disabled),ref:j,tabIndex:G,role:"button","aria-disabled":i?"true":void 0,"aria-expanded":B?"true":void 0,"aria-haspopup":"listbox","aria-label":t,"aria-labelledby":[m,J].filter(Boolean).join(" ")||void 0,onKeyDown:e=>{if(!g){const o=[" ","ArrowUp","ArrowDown","Enter"];-1!==o.indexOf(e.key)&&(e.preventDefault(),L(!0,e))}},onMouseDown:i||g?null:e=>{0===e.button&&(e.preventDefault(),S.focus(),L(!0,e))},onBlur:e=>{!B&&b&&(e.persist(),Object.defineProperty(e,"target",{writable:!0,value:{value:_,name:v}}),b(e))},onFocus:T},I,{id:J}),isEmpty(U)?React.createElement("span",{dangerouslySetInnerHTML:{__html:"&#8203;"}}):U),React.createElement("input",_extends({value:Array.isArray(_)?_.join(","):_,name:v,ref:D,"aria-hidden":!0,onChange:e=>{var o=$.map(e=>e.props.value).indexOf(e.target.value);-1!==o&&(o=$[o],w(o.props.value),P&&P(e,o))},tabIndex:-1,className:l.nativeInput,autoFocus:r},F)),React.createElement(c,{className:clsx(l.icon,l[`icon${capitalize(O)}`],B&&l.iconOpen,i&&l.disabled)}),React.createElement(Menu,_extends({id:`menu-${v||""}`,anchorEl:S,open:B,onClose:e=>{L(!1,e)}},f,{MenuListProps:_extends({"aria-labelledby":m,role:"listbox",disableListWrap:!0},f.MenuListProps),PaperProps:_extends({},f.PaperProps,{style:_extends({minWidth:Y},null!=f.PaperProps?f.PaperProps.style:null)})}),o))});"production"!==process.env.NODE_ENV&&(SelectInput.propTypes={"aria-label":PropTypes.string,autoFocus:PropTypes.bool,autoWidth:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object.isRequired,className:PropTypes.string,defaultValue:PropTypes.any,disabled:PropTypes.bool,displayEmpty:PropTypes.bool,IconComponent:PropTypes.elementType.isRequired,inputRef:refType,labelId:PropTypes.string,MenuProps:PropTypes.object,multiple:PropTypes.bool,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onClose:PropTypes.func,onFocus:PropTypes.func,onOpen:PropTypes.func,open:PropTypes.bool,readOnly:PropTypes.bool,renderValue:PropTypes.func,SelectDisplayProps:PropTypes.object,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),type:PropTypes.any,value:PropTypes.any,variant:PropTypes.oneOf(["standard","outlined","filled"])});export default SelectInput;