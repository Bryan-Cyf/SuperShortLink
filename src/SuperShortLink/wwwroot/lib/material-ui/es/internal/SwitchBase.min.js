import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import useControlled from"../utils/useControlled";import useFormControl from"../FormControl/useFormControl";import withStyles from"../styles/withStyles";import IconButton from"../IconButton";const styles={root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}},SwitchBase=React.forwardRef(function(e,o){const{autoFocus:t,checked:r,checkedIcon:s,classes:n,className:p,defaultChecked:c,disabled:i,icon:a,id:l,inputProps:d,inputRef:u,name:m,onBlur:y,onChange:h,onFocus:b,readOnly:f,required:P,tabIndex:T,type:k,value:x}=e,B=_objectWithoutPropertiesLoose(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),[C,g]=useControlled({controlled:r,default:Boolean(c),name:"SwitchBase",state:"checked"}),F=useFormControl();let I=i;F&&void 0===I&&(I=F.disabled);e="checkbox"===k||"radio"===k;return React.createElement(IconButton,_extends({component:"span",className:clsx(n.root,p,C&&n.checked,I&&n.disabled),disabled:I,tabIndex:null,role:void 0,onFocus:e=>{b&&b(e),F&&F.onFocus&&F.onFocus(e)},onBlur:e=>{y&&y(e),F&&F.onBlur&&F.onBlur(e)},ref:o},B),React.createElement("input",_extends({autoFocus:t,checked:r,defaultChecked:c,className:n.input,disabled:I,id:e&&l,name:m,onChange:e=>{var o=e.target.checked;g(o),h&&h(e,o)},readOnly:f,ref:u,required:P,tabIndex:T,type:k,value:x},d)),C?s:a)});"production"!==process.env.NODE_ENV&&(SwitchBase.propTypes={autoFocus:PropTypes.bool,checked:PropTypes.bool,checkedIcon:PropTypes.node.isRequired,classes:PropTypes.object.isRequired,className:PropTypes.string,defaultChecked:PropTypes.bool,disabled:PropTypes.bool,icon:PropTypes.node.isRequired,id:PropTypes.string,inputProps:PropTypes.object,inputRef:refType,name:PropTypes.string,onBlur:PropTypes.func,onChange:PropTypes.func,onFocus:PropTypes.func,readOnly:PropTypes.bool,required:PropTypes.bool,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),type:PropTypes.string.isRequired,value:PropTypes.any});export default withStyles(styles,{name:"PrivateSwitchBase"})(SwitchBase);export{styles};