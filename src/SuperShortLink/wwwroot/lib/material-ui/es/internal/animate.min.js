function easeInOutSin(n){return(1+Math.sin(Math.PI*n-Math.PI/2))/2}export default function animate(t,e,a,n={},r=()=>{}){const{ease:i=easeInOutSin,duration:o=300}=n;let u=null;const l=e[t];let s=!1;n=()=>{s=!0};const m=n=>{s?r(new Error("Animation cancelled")):(null===u&&(u=n),n=Math.min(1,(n-u)/o),e[t]=i(n)*(a-l)+l,1<=n?requestAnimationFrame(()=>{r(null)}):requestAnimationFrame(m))};return l===a?r(new Error("Element already at target position")):requestAnimationFrame(m),n}