import{expect}from"chai";import*as React from"react";import findOutermostIntrinsic from"./findOutermostIntrinsic";import ReactTestRenderer from"react-test-renderer";import testRef from"./testRef";function findRootComponent(e,{component:t}){const o=findOutermostIntrinsic(e).getElement();return e.find(t).filterWhere(e=>e.contains(o))}function randomStringValue(){return Math.random().toString(36).slice(2)}function testClassName(n,s){it("applies the className to the root component",()=>{const e=s()["mount"];var t=randomStringValue(),o=e(React.cloneElement(n,{className:t}));expect(findOutermostIntrinsic(o).hasClass(t)).to.equal(!0,"does have a custom `className`")})}function testComponentProp(s,r){describe("prop: component",()=>{it("can render another root component with the `component` prop",()=>{const{classes:e,mount:t,testComponentPropWith:o="em"}=r();var n=t(React.cloneElement(s,{component:o}));expect(findRootComponent(n,{classes:e,component:o}).exists()).to.equal(!0)})})}function testPropsSpread(a,c){it("spreads props to the root component",()=>{const{classes:e,inheritComponent:t,mount:o}=c();var n="data-test-props-spread",s=randomStringValue();const r=findRootComponent(o(React.cloneElement(a,{"data-test-props-spread":s})),{classes:e,component:t});expect(r.props()[n]).to.equal(s)})}function describeRef(t,o){describe("ref",()=>{it("attaches the ref",()=>{const{inheritComponent:n,mount:e,refInstanceof:s}=o();testRef(t,e,(e,t)=>{if(expect(e).to.be.instanceof(s),n&&1===e.nodeType){const o=findOutermostIntrinsic(t);expect(e).to.equal(o.instance())}})})})}function testRootClass(s,r){it("applies the root class to the root component if it has this class",()=>{const{classes:e,mount:t}=r();var o,n;null!=e.root&&(o=randomStringValue(),n=t(React.cloneElement(s,{className:o})),expect(findOutermostIntrinsic(n).hasClass(e.root)).to.equal(!0),expect(findOutermostIntrinsic(n).hasClass(o)).to.equal(!0))})}function testReactTestRenderer(e){it("should render without errors in ReactTestRenderer",()=>{ReactTestRenderer.act(()=>{ReactTestRenderer.create(e,{createNodeMock:e=>document.createElement(e.type)})})})}const fullSuite={componentProp:testComponentProp,mergeClassName:testClassName,propsSpread:testPropsSpread,refForwarding:describeRef,rootClass:testRootClass,reactTestRenderer:testReactTestRenderer};export default function describeConformance(o,n){const{after:e=()=>{},only:t=Object.keys(fullSuite),skip:s=[]}=n();describe("Material-UI component API",()=>{after(e),Object.keys(fullSuite).filter(e=>-1!==t.indexOf(e)&&-1===s.indexOf(e)).forEach(e=>{const t=fullSuite[e];t(o,n)})})}