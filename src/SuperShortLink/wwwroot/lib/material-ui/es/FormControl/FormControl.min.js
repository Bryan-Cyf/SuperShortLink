import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{isFilled,isAdornedStart}from"../InputBase/utils";import withStyles from"../styles/withStyles";import capitalize from"../utils/capitalize";import isMuiElement from"../utils/isMuiElement";import FormControlContext from"./FormControlContext";const styles={root:{display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},marginNormal:{marginTop:16,marginBottom:8},marginDense:{marginTop:8,marginBottom:4},fullWidth:{width:"100%"}},FormControl=React.forwardRef(function(e,o){const{children:r,classes:t,className:i,color:s="primary",component:n="div",disabled:l=!1,error:a=!1,fullWidth:p=!1,focused:d,hiddenLabel:m=!1,margin:c="none",required:u=!1,size:f,variant:y="standard"}=e,h=_objectWithoutPropertiesLoose(e,["children","classes","className","color","component","disabled","error","fullWidth","focused","hiddenLabel","margin","required","size","variant"]);var[b,T]=React.useState(()=>{let o=!1;return r&&React.Children.forEach(r,e=>{!isMuiElement(e,["Input","Select"])||(e=isMuiElement(e,["Select"])?e.props.input:e)&&isAdornedStart(e.props)&&(o=!0)}),o});const[P,g]=React.useState(()=>{let o=!1;return r&&React.Children.forEach(r,e=>{isMuiElement(e,["Input","Select"])&&isFilled(e.props,!0)&&(o=!0)}),o}),[v,C]=React.useState(!1);var E=void 0!==d?d:v;l&&E&&C(!1);let R;if("production"!==process.env.NODE_ENV){const x=React.useRef(!1);R=()=>(x.current&&console.error(["Material-UI: There are multiple InputBase components inside a FormControl.","This is not supported. It might cause infinite rendering loops.","Only use one InputBase."].join("\n")),x.current=!0,()=>{x.current=!1})}e=React.useCallback(()=>{g(!0)},[]),e={adornedStart:b,setAdornedStart:T,color:s,disabled:l,error:a,filled:P,focused:E,fullWidth:p,hiddenLabel:m,margin:("small"===f?"dense":void 0)||c,onBlur:()=>{C(!1)},onEmpty:React.useCallback(()=>{g(!1)},[]),onFilled:e,onFocus:()=>{C(!0)},registerEffect:R,required:u,variant:y};return React.createElement(FormControlContext.Provider,{value:e},React.createElement(n,_extends({className:clsx(t.root,i,"none"!==c&&t[`margin${capitalize(c)}`],p&&t.fullWidth),ref:o},h),r))});"production"!==process.env.NODE_ENV&&(FormControl.propTypes={children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,color:PropTypes.oneOf(["primary","secondary"]),component:PropTypes.elementType,disabled:PropTypes.bool,error:PropTypes.bool,focused:PropTypes.bool,fullWidth:PropTypes.bool,hiddenLabel:PropTypes.bool,margin:PropTypes.oneOf(["dense","none","normal"]),required:PropTypes.bool,size:PropTypes.oneOf(["medium","small"]),variant:PropTypes.oneOf(["filled","outlined","standard"])});export default withStyles(styles,{name:"MuiFormControl"})(FormControl);export{styles};