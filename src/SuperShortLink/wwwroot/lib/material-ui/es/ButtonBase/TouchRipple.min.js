import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import{TransitionGroup}from"react-transition-group";import clsx from"clsx";import withStyles from"../styles/withStyles";import Ripple from"./Ripple";const DURATION=550,DELAY_RIPPLE=80,styles=e=>({root:{overflow:"hidden",pointerEvents:"none",position:"absolute",zIndex:0,top:0,right:0,bottom:0,left:0,borderRadius:"inherit"},ripple:{opacity:0,position:"absolute"},rippleVisible:{opacity:.3,transform:"scale(1)",animation:`$enter ${DURATION}ms ${e.transitions.easing.easeInOut}`},ripplePulsate:{animationDuration:`${e.transitions.duration.shorter}ms`},child:{opacity:1,display:"block",width:"100%",height:"100%",borderRadius:"50%",backgroundColor:"currentColor"},childLeaving:{opacity:0,animation:`$exit ${DURATION}ms ${e.transitions.easing.easeInOut}`},childPulsate:{position:"absolute",left:0,top:0,animation:`$pulsate 2500ms ${e.transitions.easing.easeInOut} 200ms infinite`},"@keyframes enter":{"0%":{transform:"scale(0)",opacity:.1},"100%":{transform:"scale(1)",opacity:.3}},"@keyframes exit":{"0%":{opacity:1},"100%":{opacity:0}},"@keyframes pulsate":{"0%":{transform:"scale(1)"},"50%":{transform:"scale(0.92)"},"100%":{transform:"scale(1)"}}}),TouchRipple=React.forwardRef(function(e,t){const{center:r=!1,classes:a,className:s}=e,o=_objectWithoutPropertiesLoose(e,["center","classes","className"]),[i,n]=React.useState([]),l=React.useRef(0),c=React.useRef(null);React.useEffect(()=>{c.current&&(c.current(),c.current=null)},[i]);const m=React.useRef(!1),h=React.useRef(null),R=React.useRef(null),f=React.useRef(null);React.useEffect(()=>()=>{clearTimeout(h.current)},[]);const d=React.useCallback(e=>{const{pulsate:t,rippleX:r,rippleY:s,rippleSize:o,cb:i}=e;n(e=>[...e,React.createElement(Ripple,{key:l.current,classes:a,timeout:DURATION,pulsate:t,rippleX:r,rippleY:s,rippleSize:o})]),l.current+=1,c.current=i},[a]),p=React.useCallback((s={},o={},i)=>{const{pulsate:a=!1,center:n=r||o.pulsate,fakeElement:l=!1}=o;if("mousedown"===s.type&&m.current)m.current=!1;else{"touchstart"===s.type&&(m.current=!0);const u=l?null:f.current;var c,p=u?u.getBoundingClientRect():{width:0,height:0,left:0,top:0};let e,t,r;t=n||0===s.clientX&&0===s.clientY||!s.clientX&&!s.touches?(e=Math.round(p.width/2),Math.round(p.height/2)):({clientX:o,clientY:c}=s.touches?s.touches[0]:s,e=Math.round(o-p.left),Math.round(c-p.top)),n?(r=Math.sqrt((2*p.width**2+p.height**2)/3),r%2==0&&(r+=1)):(c=2*Math.max(Math.abs((u?u.clientWidth:0)-e),e)+2,p=2*Math.max(Math.abs((u?u.clientHeight:0)-t),t)+2,r=Math.sqrt(c**2+p**2)),s.touches?null===R.current&&(R.current=()=>{d({pulsate:a,rippleX:e,rippleY:t,rippleSize:r,cb:i})},h.current=setTimeout(()=>{R.current&&(R.current(),R.current=null)},DELAY_RIPPLE)):d({pulsate:a,rippleX:e,rippleY:t,rippleSize:r,cb:i})}},[r,d]),u=React.useCallback(()=>{p({},{pulsate:!0})},[p]),y=React.useCallback((e,t)=>(clearTimeout(h.current),"touchend"===e.type&&R.current?(e.persist(),R.current(),R.current=null,void(h.current=setTimeout(()=>{y(e,t)}))):(R.current=null,n(e=>0<e.length?e.slice(1):e),void(c.current=t))),[]);return React.useImperativeHandle(t,()=>({pulsate:u,start:p,stop:y}),[u,p,y]),React.createElement("span",_extends({className:clsx(a.root,s),ref:f},o),React.createElement(TransitionGroup,{component:null,exit:!0},i))});"production"!==process.env.NODE_ENV&&(TouchRipple.propTypes={center:PropTypes.bool,classes:PropTypes.object.isRequired,className:PropTypes.string});export default withStyles(styles,{flip:!1,name:"MuiTouchRipple"})(React.memo(TouchRipple));export{DELAY_RIPPLE,styles};