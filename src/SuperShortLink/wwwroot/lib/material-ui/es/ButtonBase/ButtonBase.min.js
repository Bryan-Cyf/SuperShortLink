import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import*as ReactDOM from"react-dom";import clsx from"clsx";import{elementTypeAcceptingRef,refType}from"@material-ui/utils";import useForkRef from"../utils/useForkRef";import useEventCallback from"../utils/useEventCallback";import deprecatedPropType from"../utils/deprecatedPropType";import withStyles from"../styles/withStyles";import useIsFocusVisible from"../utils/useIsFocusVisible";import TouchRipple from"./TouchRipple";const styles={root:{display:"inline-flex",alignItems:"center",justifyContent:"center",position:"relative",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle","-moz-appearance":"none","-webkit-appearance":"none",textDecoration:"none",color:"inherit","&::-moz-focus-inner":{borderStyle:"none"},"&$disabled":{pointerEvents:"none",cursor:"default"},"@media print":{colorAdjust:"exact"}},disabled:{},focusVisible:{}},ButtonBase=React.forwardRef(function(e,o){const{action:t,buttonRef:r,centerRipple:s=!1,children:n,classes:p,className:c,component:u="button",disabled:a=!1,disableRipple:i=!1,disableTouchRipple:l=!1,focusRipple:f=!1,focusVisibleClassName:d,onBlur:b,onClick:y,onFocus:T,onFocusVisible:m,onKeyDown:R,onKeyUp:h,onMouseDown:P,onMouseLeave:v,onMouseUp:g,onTouchEnd:k,onTouchMove:D,onTouchStart:E,onDragLeave:M,tabIndex:x=0,TouchRippleProps:C,type:F="button"}=e,V=_objectWithoutPropertiesLoose(e,["action","buttonRef","centerRipple","children","classes","className","component","disabled","disableRipple","disableTouchRipple","focusRipple","focusVisibleClassName","onBlur","onClick","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","tabIndex","TouchRippleProps","type"]),B=React.useRef(null);const w=React.useRef(null),[N,L]=React.useState(!1);a&&N&&L(!1);const{isFocusVisible:S,onBlurVisible:I,ref:U}=useIsFocusVisible();function j(o,t,r=l){return useEventCallback(e=>{return t&&t(e),!r&&w.current&&w.current[o](e),!0})}React.useImperativeHandle(t,()=>({focusVisible:()=>{L(!0),B.current.focus()}}),[]),React.useEffect(()=>{N&&f&&!i&&w.current.pulsate()},[i,f,N]);var K=j("start",P),O=j("stop",M),_=j("stop",g),A=j("stop",e=>{N&&e.preventDefault(),v&&v(e)}),W=j("start",E),z=j("stop",k),H=j("stop",D),$=j("stop",e=>{N&&(I(e),L(!1)),b&&b(e)},!1),q=useEventCallback(e=>{B.current||(B.current=e.currentTarget),S(e)&&(L(!0),m&&m(e)),T&&T(e)});const G=()=>{var e=ReactDOM.findDOMNode(B.current);return u&&"button"!==u&&!("A"===e.tagName&&e.href)},J=React.useRef(!1);var Q=useEventCallback(e=>{f&&!J.current&&N&&w.current&&" "===e.key&&(J.current=!0,e.persist(),w.current.stop(e,()=>{w.current.start(e)})),e.target===e.currentTarget&&G()&&" "===e.key&&e.preventDefault(),R&&R(e),e.target===e.currentTarget&&G()&&"Enter"===e.key&&!a&&(e.preventDefault(),y&&y(e))}),X=useEventCallback(e=>{f&&" "===e.key&&w.current&&N&&!e.defaultPrevented&&(J.current=!1,e.persist(),w.current.stop(e,()=>{w.current.pulsate(e)})),h&&h(e),y&&e.target===e.currentTarget&&G()&&" "===e.key&&!e.defaultPrevented&&y(e)});let Y=u;"button"===Y&&V.href&&(Y="a");const Z={};"button"===Y?(Z.type=F,Z.disabled=a):("a"===Y&&V.href||(Z.role="button"),Z["aria-disabled"]=a);e=useForkRef(r,o),o=useForkRef(U,B),o=useForkRef(e,o);const[ee,oe]=React.useState(!1);React.useEffect(()=>{oe(!0)},[]);const te=ee&&!i&&!a;return"production"!==process.env.NODE_ENV&&React.useEffect(()=>{te&&!w.current&&console.error(["Material-UI: The `component` prop provided to ButtonBase is invalid.","Please make sure the children prop is rendered in this custom component."].join("\n"))},[te]),React.createElement(Y,_extends({className:clsx(p.root,c,N&&[p.focusVisible,d],a&&p.disabled),onBlur:$,onClick:y,onFocus:q,onKeyDown:Q,onKeyUp:X,onMouseDown:K,onMouseLeave:A,onMouseUp:_,onDragLeave:O,onTouchEnd:z,onTouchMove:H,onTouchStart:W,ref:o,tabIndex:a?-1:x},Z,V),n,te?React.createElement(TouchRipple,_extends({ref:w,center:s},C)):null)});"production"!==process.env.NODE_ENV&&(ButtonBase.propTypes={action:refType,buttonRef:deprecatedPropType(refType,"Use `ref` instead."),centerRipple:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,component:elementTypeAcceptingRef,disabled:PropTypes.bool,disableRipple:PropTypes.bool,disableTouchRipple:PropTypes.bool,focusRipple:PropTypes.bool,focusVisibleClassName:PropTypes.string,href:PropTypes.string,onBlur:PropTypes.func,onClick:PropTypes.func,onDragLeave:PropTypes.func,onFocus:PropTypes.func,onFocusVisible:PropTypes.func,onKeyDown:PropTypes.func,onKeyUp:PropTypes.func,onMouseDown:PropTypes.func,onMouseLeave:PropTypes.func,onMouseUp:PropTypes.func,onTouchEnd:PropTypes.func,onTouchMove:PropTypes.func,onTouchStart:PropTypes.func,tabIndex:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),TouchRippleProps:PropTypes.object,type:PropTypes.oneOfType([PropTypes.oneOf(["button","reset","submit"]),PropTypes.string])});export default withStyles(styles,{name:"MuiButtonBase"})(ButtonBase);export{styles};