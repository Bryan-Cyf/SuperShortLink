import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import _extends from"@babel/runtime/helpers/esm/extends";import*as React from"react";import*as ReactDOM from"react-dom";import PropTypes from"prop-types";import{getThemeProps,useTheme}from"@material-ui/styles";import{elementAcceptingRef,HTMLElementType}from"@material-ui/utils";import deprecatedPropType from"../utils/deprecatedPropType";import ownerDocument from"../utils/ownerDocument";import Portal from"../Portal";import createChainedFunction from"../utils/createChainedFunction";import useForkRef from"../utils/useForkRef";import useEventCallback from"../utils/useEventCallback";import zIndex from"../styles/zIndex";import ModalManager,{ariaHidden}from"./ModalManager";import TrapFocus from"../Unstable_TrapFocus";import SimpleBackdrop from"./SimpleBackdrop";function getContainer(e){return e="function"==typeof e?e():e,ReactDOM.findDOMNode(e)}function getHasTransition(e){return!!e.children&&e.children.props.hasOwnProperty("in")}const defaultManager=new ModalManager,styles=e=>({root:{position:"fixed",zIndex:e.zIndex.modal,right:0,bottom:0,top:0,left:0},hidden:{visibility:"hidden"}}),Modal=React.forwardRef(function(e,o){var r=useTheme(),e=getThemeProps({name:"MuiModal",props:_extends({},e),theme:r});const{BackdropComponent:t=SimpleBackdrop,BackdropProps:n,children:a,closeAfterTransition:s=!1,container:p,disableAutoFocus:c=!1,disableBackdropClick:l=!1,disableEnforceFocus:i=!1,disableEscapeKeyDown:d=!1,disablePortal:u=!1,disableRestoreFocus:m=!1,disableScrollLock:b=!1,hideBackdrop:f=!1,keepMounted:y=!1,manager:T=defaultManager,onBackdropClick:k,onClose:P,onEscapeKeyDown:h,onRendered:R,open:C}=e,E=_objectWithoutPropertiesLoose(e,["BackdropComponent","BackdropProps","children","closeAfterTransition","container","disableAutoFocus","disableBackdropClick","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open"]),[g,F]=React.useState(!0),M=React.useRef({}),x=React.useRef(null),w=React.useRef(null);o=useForkRef(w,o);const B=getHasTransition(e),D=()=>ownerDocument(x.current),v=()=>(M.current.modalRef=w.current,M.current.mountNode=x.current,M.current),A=()=>{T.mount(v(),{disableScrollLock:b}),w.current.scrollTop=0},I=useEventCallback(()=>{var e=getContainer(p)||D().body;T.add(v(),e),w.current&&A()}),K=React.useCallback(()=>T.isTopModal(v()),[T]);e=useEventCallback(e=>{(x.current=e)&&(R&&R(),C&&K()?A():ariaHidden(w.current,!0))});const L=React.useCallback(()=>{T.remove(v())},[T]);if(React.useEffect(()=>()=>{L()},[L]),React.useEffect(()=>{C?I():B&&s||L()},[C,L,B,s,I]),!y&&!C&&(!B||g))return null;r=styles(r||{zIndex:zIndex});const _={};return void 0===a.props.tabIndex&&(_.tabIndex=a.props.tabIndex||"-1"),B&&(_.onEnter=createChainedFunction(()=>{F(!1)},a.props.onEnter),_.onExited=createChainedFunction(()=>{F(!0),s&&L()},a.props.onExited)),React.createElement(Portal,{ref:e,container:p,disablePortal:u},React.createElement("div",_extends({ref:o,onKeyDown:e=>{"Escape"===e.key&&K()&&(h&&h(e),d||(e.stopPropagation(),P&&P(e,"escapeKeyDown")))},role:"presentation"},E,{style:_extends({},r.root,!C&&g?r.hidden:{},E.style)}),f?null:React.createElement(t,_extends({open:C,onClick:e=>{e.target===e.currentTarget&&(k&&k(e),!l&&P&&P(e,"backdropClick"))}},n)),React.createElement(TrapFocus,{disableEnforceFocus:i,disableAutoFocus:c,disableRestoreFocus:m,getDoc:D,isEnabled:K,open:C},React.cloneElement(a,_))))});"production"!==process.env.NODE_ENV&&(Modal.propTypes={BackdropComponent:PropTypes.elementType,BackdropProps:PropTypes.object,children:elementAcceptingRef.isRequired,closeAfterTransition:PropTypes.bool,container:PropTypes.oneOfType([HTMLElementType,PropTypes.instanceOf(React.Component),PropTypes.func]),disableAutoFocus:PropTypes.bool,disableBackdropClick:deprecatedPropType(PropTypes.bool,"Use the onClose prop with the `reason` argument to filter the `backdropClick` events."),disableEnforceFocus:PropTypes.bool,disableEscapeKeyDown:PropTypes.bool,disablePortal:PropTypes.bool,disableRestoreFocus:PropTypes.bool,disableScrollLock:PropTypes.bool,hideBackdrop:PropTypes.bool,keepMounted:PropTypes.bool,manager:PropTypes.object,onBackdropClick:deprecatedPropType(PropTypes.func,"Use the onClose prop with the `reason` argument to handle the `backdropClick` events."),onClose:PropTypes.func,onEscapeKeyDown:deprecatedPropType(PropTypes.func,"Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events."),onRendered:deprecatedPropType(PropTypes.func,"Use the ref instead."),open:PropTypes.bool.isRequired});export default Modal;export{styles};