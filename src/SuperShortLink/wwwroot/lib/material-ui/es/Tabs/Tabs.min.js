import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import debounce from"../utils/debounce";import ownerWindow from"../utils/ownerWindow";import{getNormalizedScrollLeft,detectScrollType}from"../utils/scrollLeft";import animate from"../internal/animate";import ScrollbarSize from"./ScrollbarSize";import withStyles from"../styles/withStyles";import TabIndicator from"./TabIndicator";import TabScrollButton from"../TabScrollButton";import useEventCallback from"../utils/useEventCallback";import useTheme from"../styles/useTheme";const styles=e=>({root:{overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},vertical:{flexDirection:"column"},flexContainer:{display:"flex"},flexContainerVertical:{flexDirection:"column"},centered:{justifyContent:"center"},scroller:{position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},fixed:{overflowX:"hidden",width:"100%"},scrollable:{overflowX:"scroll",scrollbarWidth:"none","&::-webkit-scrollbar":{display:"none"}},scrollButtons:{},scrollButtonsDesktop:{[e.breakpoints.down("xs")]:{display:"none"}},indicator:{}}),Tabs=React.forwardRef(function(e,t){const{"aria-label":o,"aria-labelledby":r,action:l,centered:n=!1,children:a,classes:s,className:i,component:c="div",indicatorColor:p="secondary",onChange:d,orientation:u="horizontal",ScrollButtonComponent:m=TabScrollButton,scrollButtons:f="auto",selectionFollowsFocus:b,TabIndicatorProps:h={},TabScrollButtonProps:y,textColor:v="inherit",value:T,variant:g="standard"}=e,w=_objectWithoutPropertiesLoose(e,["aria-label","aria-labelledby","action","centered","children","classes","className","component","indicatorColor","onChange","orientation","ScrollButtonComponent","scrollButtons","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant"]),C=useTheme(),S="scrollable"===g,E="rtl"===C.direction,x="vertical"===u,R=x?"scrollTop":"scrollLeft",N=x?"top":"left",P=x?"bottom":"right",B=x?"clientHeight":"clientWidth",k=x?"height":"width";"production"!==process.env.NODE_ENV&&n&&S&&console.error('Material-UI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');const[W,L]=React.useState(!1),[z,M]=React.useState({}),[D,_]=React.useState({start:!1,end:!1}),[F,I]=React.useState({overflow:"hidden",marginBottom:null}),j=new Map,O=React.useRef(null),A=React.useRef(null),V=()=>{const e=O.current;let t;e&&(r=e.getBoundingClientRect(),t={clientWidth:e.clientWidth,scrollLeft:e.scrollLeft,scrollTop:e.scrollTop,scrollLeftNormalized:getNormalizedScrollLeft(e,C.direction),scrollWidth:e.scrollWidth,top:r.top,bottom:r.bottom,left:r.left,right:r.right});let o;if(e&&!1!==T){var r=A.current.children;if(0<r.length){const l=r[j.get(T)];"production"!==process.env.NODE_ENV&&(l||console.error(["Material-UI: The value provided to the Tabs component is invalid.",`None of the Tabs' children match with \`${T}\`.`,j.keys?`You can provide one of the following values: ${Array.from(j.keys()).join(", ")}.`:null].join("\n"))),o=l?l.getBoundingClientRect():null}}return{tabsMeta:t,tabMeta:o}},H=useEventCallback(()=>{var{tabsMeta:e,tabMeta:t}=V();let o=0;t&&e&&(o=x?t.top-e.top+e.scrollTop:(r=E?e.scrollLeftNormalized+e.clientWidth-e.scrollWidth:e.scrollLeft,t.left-e.left+r));var r,e={[N]:o,[k]:t?t[k]:0};isNaN(z[N])||isNaN(z[k])?M(e):(r=Math.abs(z[N]-e[N]),t=Math.abs(z[k]-e[k]),(1<=r||1<=t)&&M(e))}),U=e=>{animate(R,O.current,e)},X=e=>{let t=O.current[R];x?t+=e:(t+=e*(E?-1:1),t*=E&&"reverse"===detectScrollType()?-1:1),U(t)},Y=()=>{X(-O.current[B])},$=()=>{X(O.current[B])},K=React.useCallback(e=>{I({overflow:null,marginBottom:-e})},[]);const q=useEventCallback(()=>{var e,{tabsMeta:t,tabMeta:o}=V();o&&t&&(o[N]<t[N]?(e=t[R]+(o[N]-t[N]),U(e)):o[P]>t[P]&&(t=t[R]+(o[P]-t[P]),U(t)))}),G=useEventCallback(()=>{if(S&&"off"!==f){var{scrollTop:o,scrollHeight:r,clientHeight:l,scrollWidth:n,clientWidth:a}=O.current;let e,t;t=x?(e=1<o,o<r-l-1):(l=getNormalizedScrollLeft(O.current,C.direction),e=E?l<n-a-1:1<l,E?1<l:l<n-a-1),e===D.start&&t===D.end||_({start:e,end:t})}});React.useEffect(()=>{const e=debounce(()=>{H(),G()}),t=ownerWindow(O.current);return t.addEventListener("resize",e),()=>{e.clear(),t.removeEventListener("resize",e)}},[H,G]);const J=React.useCallback(debounce(()=>{G()}));React.useEffect(()=>()=>{J.clear()},[J]),React.useEffect(()=>{L(!0)},[]),React.useEffect(()=>{H(),G()}),React.useEffect(()=>{q()},[q,z]),React.useImperativeHandle(l,()=>({updateIndicator:H,updateScrollButtons:G}),[H,G]);const Q=React.createElement(TabIndicator,_extends({className:s.indicator,orientation:u,color:p},h,{style:_extends({},z,h.style)}));let Z=0;var ee=React.Children.map(a,e=>{if(!React.isValidElement(e))return null;"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Tabs component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));var t=void 0===e.props.value?Z:e.props.value;j.set(t,Z);var o=t===T;return Z+=1,React.cloneElement(e,{fullWidth:"fullWidth"===g,indicator:o&&!W&&Q,selected:o,selectionFollowsFocus:b,onChange:d,textColor:v,value:t})}),e=(()=>{const e={};e.scrollbarSizeListener=S?React.createElement(ScrollbarSize,{className:s.scrollable,onChange:K}):null;var t=D.start||D.end,t=S&&("auto"===f&&t||"desktop"===f||"on"===f);return e.scrollButtonStart=t?React.createElement(m,_extends({orientation:u,direction:E?"right":"left",onClick:Y,disabled:!D.start,className:clsx(s.scrollButtons,"on"!==f&&s.scrollButtonsDesktop)},y)):null,e.scrollButtonEnd=t?React.createElement(m,_extends({orientation:u,direction:E?"left":"right",onClick:$,disabled:!D.end,className:clsx(s.scrollButtons,"on"!==f&&s.scrollButtonsDesktop)},y)):null,e})();return React.createElement(c,_extends({className:clsx(s.root,i,x&&s.vertical),ref:t},w),e.scrollButtonStart,e.scrollbarSizeListener,React.createElement("div",{className:clsx(s.scroller,S?s.scrollable:s.fixed),style:F,ref:O,onScroll:J},React.createElement("div",{"aria-label":o,"aria-labelledby":r,className:clsx(s.flexContainer,x&&s.flexContainerVertical,n&&!S&&s.centered),onKeyDown:r=>{const l=r["target"];if("tab"===l.getAttribute("role")){let e=null,t="vertical"!==u?"ArrowLeft":"ArrowUp",o="vertical"!==u?"ArrowRight":"ArrowDown";switch("vertical"!==u&&"rtl"===C.direction&&(t="ArrowRight",o="ArrowLeft"),r.key){case t:e=l.previousElementSibling||A.current.lastChild;break;case o:e=l.nextElementSibling||A.current.firstChild;break;case"Home":e=A.current.firstChild;break;case"End":e=A.current.lastChild}null!==e&&(e.focus(),r.preventDefault())}},ref:A,role:"tablist"},ee),W&&Q),e.scrollButtonEnd)});"production"!==process.env.NODE_ENV&&(Tabs.propTypes={action:refType,"aria-label":PropTypes.string,"aria-labelledby":PropTypes.string,centered:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,component:PropTypes.elementType,indicatorColor:PropTypes.oneOf(["primary","secondary"]),onChange:PropTypes.func,orientation:PropTypes.oneOf(["horizontal","vertical"]),ScrollButtonComponent:PropTypes.elementType,scrollButtons:PropTypes.oneOf(["auto","desktop","off","on"]),selectionFollowsFocus:PropTypes.bool,TabIndicatorProps:PropTypes.object,TabScrollButtonProps:PropTypes.object,textColor:PropTypes.oneOf(["inherit","primary","secondary"]),value:PropTypes.any,variant:PropTypes.oneOf(["fullWidth","scrollable","standard"])});export default withStyles(styles,{name:"MuiTabs"})(Tabs);export{styles};