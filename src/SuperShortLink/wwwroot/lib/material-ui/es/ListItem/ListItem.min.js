import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{chainPropTypes}from"@material-ui/utils";import withStyles from"../styles/withStyles";import ButtonBase from"../ButtonBase";import isMuiElement from"../utils/isMuiElement";import useForkRef from"../utils/useForkRef";import ListContext from"../List/ListContext";import*as ReactDOM from"react-dom";const styles=e=>({root:{display:"flex",justifyContent:"flex-start",alignItems:"center",position:"relative",textDecoration:"none",width:"100%",boxSizing:"border-box",textAlign:"left",paddingTop:8,paddingBottom:8,"&$focusVisible":{backgroundColor:e.palette.action.selected},"&$selected, &$selected:hover":{backgroundColor:e.palette.action.selected},"&$disabled":{opacity:.5}},container:{position:"relative"},focusVisible:{},dense:{paddingTop:4,paddingBottom:4},alignItemsFlexStart:{alignItems:"flex-start"},disabled:{},divider:{borderBottom:`1px solid ${e.palette.divider}`,backgroundClip:"padding-box"},gutters:{paddingLeft:16,paddingRight:16},button:{transition:e.transitions.create("background-color",{duration:e.transitions.duration.shortest}),"&:hover":{textDecoration:"none",backgroundColor:e.palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}}},secondaryAction:{paddingRight:48},selected:{}}),useEnhancedEffect="undefined"==typeof window?React.useEffect:React.useLayoutEffect,ListItem=React.forwardRef(function(e,t){const{alignItems:o="center",autoFocus:s=!1,button:n=!1,children:r,classes:i,className:a,component:l,ContainerComponent:c="li",ContainerProps:{className:d}={},dense:p=!1,disabled:m=!1,disableGutters:u=!1,divider:b=!1,focusVisibleClassName:f,selected:y=!1}=e,h=_objectWithoutPropertiesLoose(e.ContainerProps,["className"]),g=_objectWithoutPropertiesLoose(e,["alignItems","autoFocus","button","children","classes","className","component","ContainerComponent","ContainerProps","dense","disabled","disableGutters","divider","focusVisibleClassName","selected"]);var x=React.useContext(ListContext),C={dense:p||x.dense||!1,alignItems:o};const P=React.useRef(null);useEnhancedEffect(()=>{s&&(P.current?P.current.focus():"production"!==process.env.NODE_ENV&&console.error("Material-UI: Unable to set focus to a ListItem whose component has not been rendered."))},[s]);const v=React.Children.toArray(r);e=v.length&&isMuiElement(v[v.length-1],["ListItemSecondaryAction"]),x=React.useCallback(e=>{P.current=ReactDOM.findDOMNode(e)},[]),t=useForkRef(x,t);const R=_extends({className:clsx(i.root,a,C.dense&&i.dense,!u&&i.gutters,b&&i.divider,m&&i.disabled,n&&i.button,"center"!==o&&i.alignItemsFlexStart,e&&i.secondaryAction,y&&i.selected),disabled:m},g);let T=l||"li";return n&&(R.component=l||"div",R.focusVisibleClassName=clsx(i.focusVisible,f),T=ButtonBase),e?(T=R.component||l?T:"div","li"===c&&("li"===T?T="div":"li"===R.component&&(R.component="div")),React.createElement(ListContext.Provider,{value:C},React.createElement(c,_extends({className:clsx(i.container,d),ref:t},h),React.createElement(T,R,v),v.pop()))):React.createElement(ListContext.Provider,{value:C},React.createElement(T,_extends({ref:t},R),v))});"production"!==process.env.NODE_ENV&&(ListItem.propTypes={alignItems:PropTypes.oneOf(["flex-start","center"]),autoFocus:PropTypes.bool,button:PropTypes.bool,children:chainPropTypes(PropTypes.node,e=>{var t=React.Children.toArray(e.children);let o=-1;for(let e=t.length-1;0<=e;--e){var s=t[e];if(isMuiElement(s,["ListItemSecondaryAction"])){o=e;break}}return-1!==o&&o!==t.length-1?new Error("Material-UI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem."):null}),classes:PropTypes.object.isRequired,className:PropTypes.string,component:PropTypes.elementType,ContainerComponent:PropTypes.elementType,ContainerProps:PropTypes.object,dense:PropTypes.bool,disabled:PropTypes.bool,disableGutters:PropTypes.bool,divider:PropTypes.bool,focusVisibleClassName:PropTypes.string,selected:PropTypes.bool});export default withStyles(styles,{name:"MuiListItem"})(ListItem);export{styles};